{"version":3,"file":"static/webpack/static/development/pages/courses.js.b74983d4796719109f8d.hot-update.js","sources":["webpack:///./pages/courses.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Container,\n  Row,\n  Col,\n  Card,\n  CardImg,\n  CardText,\n  CardBody,\n  CardTitle,\n  Button,\n  Form,\n  Input,\n  InputGroup\n} from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\nimport Moment from \"react-moment\";\nimport TextTruncate from \"react-text-truncate\";\n\nimport route from \"../components/api-services\";\nimport Layout from \"../components/Layout\";\n\nclass Courses extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allCourses: [],\n      minPage: 0,\n      maxPage: 4,\n      searchValue: \"\"\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.match.path === \"/courses\") {\n      axios\n        .get(\n          route.baseURL +\n            route.coursesLimitTo +\n            \"&_start=\" +\n            this.state.minPage +\n            \"&_end=\" +\n            this.state.maxPage\n        )\n        .then(res => {\n          this.setState({\n            allCourses: res.data\n          });\n        });\n    }\n\n    if (this.props.match.path === \"/courses/:bookId\") {\n      axios\n        .get(\n          route.baseURL +\n            route.coursesByBooksID +\n            this.props.match.params.bookId +\n            \"&_start=\" +\n            this.state.minPage +\n            \"&_end=\" +\n            this.state.maxPage\n        )\n        .then(res => {\n          this.setState({\n            allCourses: res.data\n          });\n        });\n    }\n  };\n\n  getMore = () => {\n    this.setState(\n      {\n        maxPage: this.state.maxPage + 4\n      },\n      () => {\n        this.componentDidMount();\n      }\n    );\n  };\n\n  getLess = () => {\n    if (this.state.maxPage > 4) {\n      this.setState(\n        {\n          maxPage: this.state.maxPage - 4\n        },\n        () => {\n          this.componentDidMount();\n        }\n      );\n    }\n  };\n\n  searchField = () => {\n    axios\n      .get(\n        route.baseURL + route.coursesLimitTo + \"&q=\" + this.state.searchValue\n      )\n      .then(res => {\n        this.setState({\n          allCourses: res.data\n        });\n      });\n  };\n\n  resetSearchField = () => {\n    this.setState(\n      {\n        searchValue: \"\"\n      },\n      () => {\n        document.getElementById(\"searchForm\").reset();\n        this.searchField();\n      }\n    );\n  };\n\n  handleChange = event => {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  render() {\n    const { allCourses, maxPage } = this.state;\n    return (\n      <Layout>\n        <Container className=\"custom-container\">\n          <Row>\n            <Col md=\"12\" className=\"center-position\">\n              <h2>Enjoy all available courses</h2>\n              <br />\n              <Form id=\"searchForm\">\n                <Row>\n                  <Col md=\"7\">\n                    <InputGroup>\n                      <Input\n                        placeholder=\"... type to search\"\n                        name=\"searchValue\"\n                        onChange={event => {\n                          this.handleChange(event);\n                          this.searchField();\n                        }}\n                      />\n                    </InputGroup>\n                  </Col>\n                  <Button\n                    color=\"primary\"\n                    size=\"sm\"\n                    onClick={() => this.searchField()}\n                  >\n                    Find your courses\n                  </Button>\n                  <Button size=\"sm\" onClick={() => this.resetSearchField()}>\n                    Reset\n                  </Button>\n                </Row>\n              </Form>\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            {allCourses.map(item => (\n              <Col md=\"6\" key={item.id}>\n                <Card>\n                  <CardImg\n                    top\n                    width=\"300px\"\n                    height=\"300px\"\n                    src={item.images}\n                    alt=\"Card image\"\n                  />\n                  <CardBody>\n                    <CardTitle>\n                      <b>Title:</b> {item.small_description}\n                    </CardTitle>\n                    <b>Description:</b>\n                    <TextTruncate\n                      line={5}\n                      truncateText=\"â€¦\"\n                      text={item.long_description}\n                    />\n                    <CardText>\n                      <b>Tags:</b> {item.tags}\n                    </CardText>\n                    <CardText>\n                      <b>Points:</b> {item.points}\n                    </CardText>\n                  </CardBody>\n                </Card>\n                <br />\n              </Col>\n            ))}\n            <Col md=\"12\" className=\"center-position\">\n              <Button\n                color=\"success\"\n                onClick={() => {\n                  this.getMore();\n                }}\n              >\n                Show more\n              </Button>\n              {maxPage > 4 && (\n                <Button\n                  color=\"danger\"\n                  onClick={() => {\n                    this.getLess();\n                  }}\n                >\n                  Show less\n                </Button>\n              )}\n            </Col>\n          </Row>\n          <hr />\n          <Row>\n            <Col md=\"12\" className=\"center-position\">\n              <Link to=\"/books\">\n                <Button color=\"info\">Back to books</Button>\n              </Link>\n            </Col>\n          </Row>\n          <br />\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default Courses;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAcA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAWA;AACA;AAUA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AAWA;AACA;AADA;AAGA;AACA;AACA;AACA;AA9CA;AAgDA;AAEA;AADA;AAIA;AACA;AAEA;AACA;AAzDA;AA2DA;AACA;AAEA;AADA;AAIA;AACA;AAEA;AACA;AACA;AAtEA;AAwEA;AAKA;AACA;AADA;AAGA;AACA;AACA;AAlFA;AAoFA;AAEA;AADA;AAIA;AACA;AAAA;AACA;AAEA;AACA;AA9FA;AAgGA;AAGA;AACA;AAlGA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AA4FA;AAAA;AACA;AADA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AA5BA;AA+BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AA7MA;AACA;AA+MA;;;;A","sourceRoot":""}